// Code generated by fixgen, DO NOT EDIT.

package fixture

import (
	"context"
	ent_gen "ent/ent"
	"testing"
	"time"
)

func CreateTodo(t *testing.T, db *ent_gen.Client, m *ent_gen.Todo, opts ...func(*ent_gen.TodoCreate)) *ent_gen.Todo {
	t.Helper()

	tbl := &ent_gen.Todo{
		ID:          0,
		Title:       "",
		Description: "",
		CreatedAt:   time.Time{},
		// UpdatedAt is nillable
		// DoneAt is nillable
	}

	builder := db.Todo.Create()
	if isModified(m.ID) {
		builder = builder.SetID(tbl.ID)
	}
	tbl.Title = m.Title // must overwrite
	if isModified(m.Description) {
		builder = builder.SetDescription(tbl.Description)
	}
	if isModified(m.CreatedAt) {
		builder = builder.SetCreatedAt(tbl.CreatedAt)
	}
	if m.UpdatedAt != nil {
		builder = builder.SetUpdatedAt(*tbl.UpdatedAt)
	}
	if m.DoneAt != nil {
		builder = builder.SetDoneAt(*tbl.DoneAt)
	}
	for _, opt := range opts {
		opt(builder)
	}

	createdTbl, err := builder.Save(context.Background())
	if err != nil {
		t.Fatal(err)
	}

	return createdTbl
}
