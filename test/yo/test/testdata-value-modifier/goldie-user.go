// Code generated by fixgen, DO NOT EDIT.

package fixture

import (
	"context"
	"fmt"
	"math/rand/v2"
	"testing"
	yo_gen "yo/models"

	"cloud.google.com/go/spanner"
)

func CreateUser(t *testing.T, db *spanner.Client, m yo_gen.User, opts ...func(*yo_gen.User)) *yo_gen.User {
	t.Helper()

	tbl := &yo_gen.User{
		ID:        rand.Int64(),
		Name:      "Taro Yamada",                                      // Name is overwritten
		IconURL:   fmt.Sprintf("http://example.com/%d", rand.Int64()), // IconURL is overwritten
		UserType:  1,                                                  // UserType is overwritten
		CreatedAt: spanner.CommitTimestamp,
		// UpdatedAt is nullable
	}

	if isModified(m.ID) {
		tbl.ID = m.ID
	}
	if isModified(m.Name) {
		tbl.Name = m.Name
	}
	if isModified(m.IconURL) {
		tbl.IconURL = m.IconURL
	}
	if m.UserType != 1 {
		tbl.UserType = m.UserType
	}
	if isModified(m.CreatedAt) {
		t.Log("CreatedAt: spanner.CommitTimestamp should be used")
		tbl.CreatedAt = m.CreatedAt
	}
	if !m.UpdatedAt.IsNull() {
		tbl.UpdatedAt = m.UpdatedAt
	}
	for _, opt := range opts {
		opt(tbl)
	}

	_, err := db.ReadWriteTransaction(context.Background(), func(ctx context.Context, tx *spanner.ReadWriteTransaction) error {
		return tx.BufferWrite([]*spanner.Mutation{tbl.Insert(ctx)})
	})
	if err != nil {
		t.Fatal(err)
	}

	return tbl
}
